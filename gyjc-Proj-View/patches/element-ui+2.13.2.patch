diff --git a/node_modules/element-ui/packages/transfer/src/main.vue b/node_modules/element-ui/packages/transfer/src/main.vue
index 1e93e39..605e1a6 100644
--- a/node_modules/element-ui/packages/transfer/src/main.vue
+++ b/node_modules/element-ui/packages/transfer/src/main.vue
@@ -138,12 +138,26 @@
       },
   
       sourceData() {
-        return this.data.filter(item => this.value.indexOf(item[this.props.key]) === -1);
+        console.log("XFFFFFFFFFFFFFFFFF");
+        let valueObj = {}
+        this.value.forEach((item,index)=>{
+          valueObj[item] = true
+        })
+        return this.data.filter(
+          (item) => !valueObj[item[this.props.key]]
+        );
       },
 
       targetData() {
         if (this.targetOrder === 'original') {
-          return this.data.filter(item => this.value.indexOf(item[this.props.key]) > -1);
+          let valueObj = {}
+          this.value.forEach((item,index)=>{
+            valueObj[item] = true
+          })
+          let data =  this.data.filter(
+            (item) => valueObj[item[this.props.key]]
+          );
+          return data;
         } else {
           return this.value.reduce((arr, cur) => {
             const val = this.dataObj[cur];
@@ -203,12 +217,19 @@
         let currentValue = this.value.slice();
         const itemsToBeMoved = [];
         const key = this.props.key;
-        this.data.forEach(item => {
+        let leftCheckedKeyPropsObj = {};
+        this.leftChecked.forEach((item, index) => {
+          leftCheckedKeyPropsObj[item] = true;
+        });
+        let valueKeyPropsObj = {};
+        this.value.forEach((item, index) => {
+          valueKeyPropsObj[item] = true;
+        });
+        this.data.forEach((item) => {
           const itemKey = item[key];
           if (
-            this.leftChecked.indexOf(itemKey) > -1 &&
-            this.value.indexOf(itemKey) === -1
-          ) {
+            leftCheckedKeyPropsObj[itemKey] && 
+            !valueKeyPropsObj[itemKey]) {
             itemsToBeMoved.push(itemKey);
           }
         });
diff --git a/node_modules/element-ui/packages/transfer/src/transfer-panel.vue b/node_modules/element-ui/packages/transfer/src/transfer-panel.vue
index 6cfe754..3fb849f 100644
--- a/node_modules/element-ui/packages/transfer/src/transfer-panel.vue
+++ b/node_modules/element-ui/packages/transfer/src/transfer-panel.vue
@@ -230,9 +230,19 @@
 
     methods: {
       updateAllChecked() {
-        const checkableDataKeys = this.checkableData.map(item => item[this.keyProp]);
-        this.allChecked = checkableDataKeys.length > 0 &&
-          checkableDataKeys.every(item => this.checked.indexOf(item) > -1);
+        console.log("XFFFFFFFFFFFFFFFFF");
+        let start = new Date().getTime();
+        let checkObj = {};
+        this.checked.forEach((item, index) => {
+          checkObj[item] = true;
+        });
+        // 通过对象的k-v对应，n(1)的方式寻找数组中是否存在某元素
+        this.allChecked =
+          this.checkableData.length > 0 &&
+          this.checked.length > 0 &&
+          this.checkableData.every((item) => checkObj[item[this.keyProp]]);
+        // 上面被注释的源码是最耗时的，所有一直看耗时就可以了
+        console.log('updateAllCheckedEnd', new Date().getTime() - start);
       },
 
       handleAllCheckedChange(value) {
